apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
 name: sequence-with-key
 namespace: kafka-poc-ns
 labels:
 strimzi.io/cluster: kafka-connect-poc-cluster
 annotations:
 strimzi.io/restart: "true"
spec:
 class: "com.mongodb.kafka.connect.MongoSourceConnector"
 tasksMax: 1
 config:
   connection.uri: "mongodb://${file:/opt/kafka/externalï¿¾configuration/mongo-credentials/mongo-credentials.properties:username}:${file:/opt/kafka/external-configuration/mongo-credentials/mongo-credentials.properties:password}@database.mongodb:27017"
   database: "poc_db"
   collection: "sequence_with_key"
   copy.existing: true
   topic.namespace.map: "{\"*\": \"custom_key\"}"
   change.data.capture.handler: "com.mongodb.kafka.connect.sink.cdc.mongodb.ChangeStreamHandler"
   change.stream.full.document: "updateLookup"
   # to filter document where complete is true for existing documents.
   copy.existing.pipeline: "[{ \"$match\": { \"complete\": true } }]"
   # to filter document where complete is true for newly arriving documents.
   pipeline: "[{ \"$match\": { \"fullDocument.complete\": true } }]"
   # Error handling
   mongo.errors.tolerance: "all"
   mongo.errors.deadletterqueue.topic.name: "mongo_extract_errors"
   heartbeat.interval.ms: 30000
   offset.partition.name: sequence_with_key.1 
   # transform
   #transforms: InsertStatic, AddTimestamp #, MyKey
   #transforms.InsertStatic.type: "org.apache.kafka.connect.transforms.InsertField$Value"
   #transforms.InsertStatic.static.field: "myfield"
   #transforms.InsertStatic.static.value: "myvalue" 
   #transforms.AddTimestamp.type: "org.apache.kafka.connect.transforms.InsertField$Value"
   #transforms.AddTimestamp.timestamp.field: "insert_time"
   # custom key
   output.format.value: "schema"
   output.format.key : "schema"
   output.schema.infer.value: true
   output.schema.key : "{\"type\":\"record\",\"name\":\"keySchema\",\"fields\":[{\"name\":\"fullDocument.mykey\",\"type\":\"string\"}]}"